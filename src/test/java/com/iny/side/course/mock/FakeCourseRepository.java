package com.iny.side.course.mock;

import com.iny.side.course.domain.entity.Course;
import com.iny.side.course.domain.repository.CourseRepository;
import org.springframework.stereotype.Repository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

@Repository
public class FakeCourseRepository implements CourseRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Course> data = new ArrayList<>();

    public Course save(Course course) {
        if (course.getId() == null || course.getId() == 0) {
            Course savedCourses = Course.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(course.getName())
                    .semester(course.getSemester())
                    .account(course.getAccount())
                    .build();
            data.add(savedCourses);
            return savedCourses;
        }
        data.removeIf(item -> Objects.equals(item.getId(), course.getId()));
        data.add(course);
        return course;
    }

    @Override
    public List<Course> findMyCourseBySemester(Long accountId, String semester) {
        return data.stream()
                .filter(c -> c.getAccount().getId().equals(accountId) &&
                        c.getSemester().equals(semester))
                .toList();
    }
}
