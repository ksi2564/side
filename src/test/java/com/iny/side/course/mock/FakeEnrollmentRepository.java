package com.iny.side.course.mock;

import com.iny.side.course.domain.entity.Course;
import com.iny.side.course.domain.entity.Enrollment;
import com.iny.side.course.domain.repository.EnrollmentRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeEnrollmentRepository implements EnrollmentRepository {
    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Enrollment> data = new ArrayList<>();

    public Enrollment save(Enrollment enrollment) {
        if (enrollment.getId() == null || enrollment.getId() == 0) {
            Enrollment savedEnrollment = Enrollment.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .account(enrollment.getAccount())
                    .course(enrollment.getCourse())
                    .build();
            data.add(savedEnrollment);
            return savedEnrollment;
        }
        data.removeIf(item -> Objects.equals(item.getId(), enrollment.getId()));
        data.add(enrollment);
        return enrollment;
    }

    @Override
    public List<Enrollment> findAllByAccountIdAndSemester(Long accountId, String semester) {
        return data.stream()
                .filter(e -> e.getAccount().getId().equals(accountId) &&
                        e.getCourse().getSemester().equals(semester))
                .toList();
    }
}
