package com.iny.side.assignment.mock;

import com.iny.side.assignment.domain.entity.Assignment;
import com.iny.side.assignment.domain.repository.AssignmentRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class FakeAssignmentRepository implements AssignmentRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Assignment> data = new ArrayList<>();

    public Assignment save(Assignment assignment) {
        if (assignment.getId() == null || assignment.getId() == 0) {
            Assignment savedAssignment = Assignment.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .title(assignment.getTitle())
                    .personaName(assignment.getPersonaName())
                    .personaAge(assignment.getPersonaAge())
                    .personaGender(assignment.getPersonaGender())
                    .personaSymptom(assignment.getPersonaSymptom())
                    .personaHistory(assignment.getPersonaHistory())
                    .personaPersonality(assignment.getPersonaPersonality())
                    .personaDisease(assignment.getPersonaDisease())
                    .objective(assignment.getObjective())
                    .maxTurns(assignment.getMaxTurns())
                    .dueDate(assignment.getDueDate())
                    .account(assignment.getAccount())
                    .course(assignment.getCourse())
                    .build();

            data.add(savedAssignment);
            return savedAssignment;
        }
        data.removeIf(item -> Objects.equals(item.getId(), assignment.getId()));
        data.add(assignment);
        return assignment;
    }

    @Override
    public List<Assignment> findByCourseId(Long courseId) {
        return data.stream()
                .filter(assignment -> assignment.getCourse() != null &&
                        Objects.equals(assignment.getCourse().getId(), courseId))
                .toList();
    }
}
